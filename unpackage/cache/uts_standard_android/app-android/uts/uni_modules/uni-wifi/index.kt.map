{"version":3,"sources":["uni_modules/uni-wifi/utssdk/app-android/index.uts","uni_modules/uni-wifi/utssdk/interface.uts","uni_modules/uni-wifi/utssdk/unierror.uts"],"sourcesContent":["import Context from \"android.content.Context\";\r\nimport WifiManager from \"android.net.wifi.WifiManager\";\r\nimport WifiInfo from \"android.net.wifi.WifiInfo\";\r\nimport Manifest from \"android.Manifest\";\r\nimport PackageManager from \"android.content.pm.PackageManager\";\r\nimport ScanResult from \"android.net.wifi.ScanResult\";\r\nimport BroadcastReceiver from \"android.content.BroadcastReceiver\";\r\nimport ActivityCompat from \"androidx.core.app.ActivityCompat\";\r\nimport IntentFilter from \"android.content.IntentFilter\";\r\nimport Intent from \"android.content.Intent\";\r\n\r\nimport WifiConfiguration from 'android.net.wifi.WifiConfiguration';\r\nimport AuthAlgorithm from 'android.net.wifi.WifiConfiguration.AuthAlgorithm';\r\nimport KeyMgmt from 'android.net.wifi.WifiConfiguration.KeyMgmt';\r\nimport TextUtils from 'android.text.TextUtils';\r\nimport Build from 'android.os.Build';\r\n\r\nimport { UniWifiResult, UniWifiInfoWithPartialInfo,GetConnectedWifiOptions, WifiConnectOption, WifiOption, UniWifiInfo,UniWifiCallback ,UniWifiResultCallback,UniWifiResultCallbackWithPartialInfo,UniGetWifiListCallback} from \"../interface.uts\"\r\nimport { WifiFailImpl, getErrcode,UniErrorSubject } from '../unierror';\r\n\r\n\r\n/**\r\n\t* 全局数据储存\r\n\t*/\r\nclass Global {\r\n\tstatic mReceiver : CustomBroadcastReceiver | null = null;\r\n\tstatic WIFI_AUTH_OPEN : string = \"\";\r\n\tstatic WIFI_AUTH_ROAM : String = \"[ESS]\";\r\n\t// 扫描wifi结果\r\n\tstatic scanList : AndroidUniWifiInfo[] = []\r\n\t// 获取wifi列表监听\r\n\tstatic onGetWifiListCallback : UniGetWifiListCallback|null = null\r\n\tstatic supendGetWifiSuccess : UniWifiResultCallback|null = null\r\n\tstatic supendGetWifiComplete :UniWifiResultCallback|null = null\r\n\t// wifi链接监听\r\n\tstatic onWifiConnectCallbackList : UniWifiResultCallback[] = []\r\n\tstatic onWifiConnectWithPartialInfoCallbackList : UniWifiResultCallbackWithPartialInfo[] = []\r\n}\r\n\r\n\r\n/**\r\n\t* 是否是标准的16进制字符\r\n\t*/\r\nfunction isHex(key : string) : boolean {\r\n\tfor (var i = key.length - 1; i >= 0; i--) {\r\n\t\tlet c = key.charAt(i);\r\n\t\tif (!(c >= '0' && c <= '9' || c >= 'A' && c <= 'F' || c >= 'a'\r\n\t\t\t&& c <= 'f')) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\r\n\treturn true;\r\n}\r\n\r\n/**\r\n\t* 判断是否是wep格式的key\r\n\t*/\r\nfunction isHexWepKey(wepKey : string) : boolean {\r\n\tlet len = wepKey.length;\r\n\r\n\t// WEP-40, WEP-104, and some vendors using 256-bit WEP (WEP-232?)\r\n\tif (len != 10 && len != 26 && len != 58) {\r\n\t\treturn false;\r\n\t}\r\n\r\n\treturn isHex(wepKey);\r\n}\r\n/**\r\n * android 平台特有的Wifi信息对象，主要是加了加密信息这个字段\r\n */\r\nexport type AndroidUniWifiInfo = {\r\n\tSSID : string;\r\n\tBSSID ?: string;\r\n\tsecure : boolean;\r\n\tsignalStrength : number;\r\n\tfrequency : number;\r\n\tsecurityType : string;\r\n}\r\n\r\nfunction wrapUniWifiInfoFromAndroid(androidInfo : AndroidUniWifiInfo) : UniWifiInfo {\r\n\tlet ret : UniWifiInfo = {\r\n\t\tSSID: androidInfo.SSID,\r\n\t\tBSSID: androidInfo.BSSID,\r\n\t\tsecure: androidInfo.secure,\r\n\t\tsignalStrength: androidInfo.signalStrength,\r\n\t\tfrequency: androidInfo.frequency,\r\n\t}\r\n\treturn ret\r\n}\r\n/**\r\n * 从扫描结果中提取统一的wifi数据结构\r\n */\r\nfunction wrapUniWifiInfoFromScan(scanResult : ScanResult) : AndroidUniWifiInfo {\r\n\r\n\tlet ret : AndroidUniWifiInfo = {\r\n\t\tSSID: \"\",\r\n\t\tsecure: false,\r\n\t\tsignalStrength: 0,\r\n\t\tfrequency: 0,\r\n\t\tsecurityType: \"NONE\"\r\n\t}\r\n\tif (scanResult != null) {\r\n\t\t// 如果是通过扫描列表得到的数据，进行封装\r\n\t\tret.BSSID = scanResult.BSSID;\r\n\t\tret.SSID = scanResult.SSID;\r\n\r\n\t\tret.signalStrength = scanResult.level;\r\n\t\tret.frequency = scanResult.frequency;\r\n\r\n\t\t// 是否安全，微信的标准是是否需要密码。 来源:https://developers.weixin.qq.com/community/develop/doc/00064cf1790458db19cddf9925ac00?highLine=WifiInfo\r\n\t\tret.secure = false;\r\n\t\tlet capabilities = scanResult.capabilities.trim();\r\n\t\tif ((capabilities.equals(Global.WIFI_AUTH_OPEN) || capabilities.equals(Global.WIFI_AUTH_ROAM))) {\r\n\t\t\tret.secure = false;\r\n\t\t} else {\r\n\t\t\tret.secure = true;\r\n\t\t}\r\n\r\n\t\t/*扩展字段*/\r\n\t\tret.securityType = getSecurityType(scanResult);\r\n\t}\r\n\r\n\treturn ret\r\n}\r\n/**\r\n * 从链接信息中提取统一的wifi数据结构\r\n */\r\nfunction wrapUniWifiInfoFromConnectInfo(connectInfo : WifiInfo) : UniWifiInfo {\r\n\tlet ret : UniWifiInfo = {\r\n\t\tSSID: \"\",\r\n\t\tsecure: false,\r\n\t\tsignalStrength: 0,\r\n\t\tfrequency: 0,\r\n\t}\r\n\r\n\r\n\tif (connectInfo.getSSID() != null) {\r\n\t\tlet s = connectInfo.getSSID();\r\n\t\t// 微信不带，这里需要去掉引号\r\n\t\tif (s.length > 2 && s.charAt(0) == '\"' && s.charAt(s.length - 1) == '\"') {\r\n\t\t\ts = s.substring(1, s.length - 1);\r\n\t\t}\r\n\t\tret.SSID = s;\r\n\t}\r\n\r\n\tret.BSSID = connectInfo.getBSSID();\r\n\t//Android返回的值是-100~0，而微信API规范是0~100，值越大信号越好，需要+100拉齐\r\n\tret.signalStrength = connectInfo.getRssi() + 100;\r\n\tret.frequency = connectInfo.getFrequency();\r\n\r\n\r\n\treturn ret\r\n}\r\n\r\n\r\n/**\r\n * 连接wifi时使用，根据用户输入内容包装为系统需要的wifi配置对象\r\n **/\r\n@Suppress(\"DEPRECATION\")\r\nfunction wrapWifiConfiguration(SSID : string, password ?: string, passwordType : string) : WifiConfiguration {\r\n\r\n\tlet config = new WifiConfiguration();\r\n\tconfig.status = WifiConfiguration.Status.ENABLED;\r\n\tconfig.allowedAuthAlgorithms.clear();\r\n\tconfig.allowedGroupCiphers.clear();\r\n\tconfig.allowedKeyManagement.clear();\r\n\tconfig.allowedPairwiseCiphers.clear();\r\n\tconfig.allowedProtocols.clear();\r\n\tconfig.SSID = \"\\\"\".concat(SSID).concat(\"\\\"\");\r\n\r\n\r\n\t// nopass\r\n\tif (\"NONE\".equals(passwordType) || password == null) {\r\n\t\tconfig.allowedKeyManagement.set(WifiConfiguration.KeyMgmt.NONE);\r\n\t}\r\n\t// wep\r\n\telse if (\"WEP\".equals(passwordType)) {\r\n\t\tif (password != null && !TextUtils.isEmpty(password)) {\r\n\t\t\tif (isHexWepKey(password)) {\r\n\t\t\t\tconfig.wepKeys[0] = password;\r\n\t\t\t} else {\r\n\t\t\t\tconfig.wepKeys[0] = \"\\\"\".concat(password).concat(\"\\\"\");\r\n\t\t\t}\r\n\t\t}\r\n\t\tconfig.allowedAuthAlgorithms.set(AuthAlgorithm.OPEN);\r\n\t\tconfig.allowedAuthAlgorithms.set(AuthAlgorithm.SHARED);\r\n\t\tconfig.allowedKeyManagement.set(KeyMgmt.NONE);\r\n\t\tconfig.wepTxKeyIndex = 0;\r\n\t}\r\n\t// wpa\r\n\telse if (\"WPA\".equals(passwordType)) {\r\n\t\tconfig.allowedProtocols.set(WifiConfiguration.Protocol.RSN);\r\n\t\tconfig.allowedProtocols.set(WifiConfiguration.Protocol.WPA);\r\n\t\tconfig.allowedKeyManagement.set(WifiConfiguration.KeyMgmt.WPA_PSK);\r\n\t\tconfig.allowedPairwiseCiphers.set(WifiConfiguration.PairwiseCipher.CCMP);\r\n\t\tconfig.allowedPairwiseCiphers.set(WifiConfiguration.PairwiseCipher.TKIP);\r\n\t\tconfig.allowedGroupCiphers.set(WifiConfiguration.GroupCipher.WEP40);\r\n\t\tconfig.allowedGroupCiphers.set(WifiConfiguration.GroupCipher.WEP104);\r\n\t\tconfig.allowedGroupCiphers.set(WifiConfiguration.GroupCipher.CCMP);\r\n\t\tconfig.allowedGroupCiphers.set(WifiConfiguration.GroupCipher.TKIP);\r\n\t\tconfig.preSharedKey = \"\\\"\".concat(password).concat(\"\\\"\");\r\n\t}\r\n\r\n\treturn config;\r\n}\r\n\r\n\r\n/**\r\n * 判断当前wifi的加密类型\r\n */\r\nfunction getSecurityType(result : ScanResult) : string {\r\n\tif (result.capabilities.contains(\"WEP\")) {\r\n\t\treturn \"WEP\";\r\n\t} else if (result.capabilities.contains(\"PSK\")) {\r\n\t\treturn \"WPA\";\r\n\t} else if (result.capabilities.contains(\"EAP\")) {\r\n\t\treturn \"EAP\";\r\n\t}\r\n\treturn \"NONE\";\r\n}\r\n\r\n\r\nfunction zeroCountNum(source ?: string) : number {\r\n\tif (source == null) {\r\n\t\treturn 0\r\n\t}\r\n\tvar splitted = source.split(\":\")\r\n\tvar countNum = 0;\r\n\tfor (perItem in splitted) {\r\n\t\tif (perItem == \"00\") {\r\n\t\t\tcountNum += 1\r\n\t\t}\r\n\t}\r\n\treturn countNum\r\n}\r\n\r\n\r\n/**\r\n\t* 自定义wifi变化广播监听器\r\n\t*/\r\n@Suppress(\"UNUSED_PARAMETER\", \"DEPRECATION\")\r\nclass CustomBroadcastReceiver extends BroadcastReceiver {\r\n\r\n\tmWifiManager : WifiManager | null = null;\r\n\r\n\tconstructor(wifiManager : WifiManager) {\r\n\t\tsuper();\r\n\t\tthis.mWifiManager = wifiManager;\r\n\t}\r\n\r\n\toverride onReceive(_context : Context, intent : Intent) : void {\r\n\r\n\r\n\t\tif (intent.action == WifiManager.WIFI_STATE_CHANGED_ACTION) {\r\n\r\n\t\t\tlet state =\r\n\t\t\t\tintent.getIntExtra(WifiManager.EXTRA_WIFI_STATE, WifiManager.WIFI_STATE_UNKNOWN)\r\n\r\n\t\t\tif (state == WifiManager.WIFI_STATE_ENABLED) {\r\n\t\t\t\t// 获取当前的connectInfo 并且进行数据封装\r\n\t\t\t\tlet uniWifiInfo = new UniWifiInfo(\"\",\"\",false,0,0)\r\n\t\t\t\t//做一些异步操作\r\n\t\t\t\tsetTimeout(function () {\r\n\t\t\t\t\t// BroadcastReceiver 中不能执行耗时任务，需要使用setTimeout\r\n\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t\tlet winfo = this.mWifiManager!.getConnectionInfo();\r\n\r\n          if(winfo != null && winfo.bssid != null && zeroCountNum(winfo.bssid) < 3){\r\n              //  当前设备链接到了某个具体的wifi.封装成数据对象\r\n              uniWifiInfo = wrapUniWifiInfoFromConnectInfo(winfo)\r\n              let res = new UniWifiResult(0,UniErrorSubject,'onWifiConnected:ok',uniWifiInfo)\r\n\r\n              // wifi状态可用了，分发当前的链接状态给已注册的监听集合\r\n              for (let perCallback in Global.onWifiConnectCallbackList) {\r\n                perCallback(res);\r\n              }\r\n              // 封装仅SSID 数据对象\r\n              let connectedWithPartialInfo = new UniWifiInfoWithPartialInfo(uniWifiInfo.SSID)\r\n\r\n              for (let perCallback in Global.onWifiConnectWithPartialInfoCallbackList) {\r\n                perCallback(connectedWithPartialInfo);\r\n              }\r\n          } else {\r\n            // 开启了wifi 开关，但是尚未链接到某个具体的wifi\r\n          }\r\n\r\n\t\t\t\t}, 100);\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\r\n\t\tif (intent.action == WifiManager.SCAN_RESULTS_AVAILABLE_ACTION) {\r\n\t\t\tstartWifiScaning = false;\r\n\t\t\t// wifi 扫描结果回调\r\n\t\t\tlet results = this.mWifiManager!.scanResults;\r\n\r\n\t\t\tif (results != null) {\r\n\t\t\t\tGlobal.scanList = []\r\n\t\t\t\tfor (let scanResult in results) {\r\n\t\t\t\t\tif (scanResult.SSID == null) {\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tGlobal.scanList.push(wrapUniWifiInfoFromScan(scanResult));\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// 挨个通知，所有的监听器\r\n\t\t\t\tif(Global.onGetWifiListCallback != null){\r\n\t\t\t\t\tconst data = new UTSJSONObject();\r\n\t\t\t\t\tdata[\"wifiList\"] = Global.scanList\r\n\t\t\t\t\tGlobal.onGetWifiListCallback?.(data);\r\n\t\t\t\t\t/**\r\n\t\t\t\t\t * 确保onGetWifiList 只会被执行一次\r\n\t\t\t\t\t */\r\n\t\t\t\t\tGlobal.onGetWifiListCallback = null\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n      let ret = new UniWifiResult(0,UniErrorSubject,\"getWifiList:ok\",null)\r\n\t\t\tif(Global.supendGetWifiSuccess != null){\r\n\t\t\t\tGlobal.supendGetWifiSuccess?.(ret)\r\n\t\t\t\tGlobal.supendGetWifiSuccess = null\r\n\t\t\t}\r\n\t\t\tif(Global.supendGetWifiComplete != null){\r\n\t\t\t\tGlobal.supendGetWifiComplete?.(ret)\r\n\t\t\t\tGlobal.supendGetWifiComplete = null\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n}\r\n\r\n\r\n\r\n/************************* 下面是对外提供的函数 *************************/\r\n/**\r\n * start wifi是否正在扫描\r\n */\r\nvar startWifiScaning = false\r\n\r\n/**\r\n * 开启wifi\r\n */\r\n@Suppress(\"DEPRECATION\")\r\nexport function startWifiImpl(option : WifiOption) {\r\n\r\n\r\n  // 具备了权限，继续前进\r\n  let wifiManager : WifiManager =\r\n  \tUTSAndroid.getAppContext()!.getSystemService(Context.WIFI_SERVICE) as WifiManager\r\n  // 用户没有开启wifi 总开关\r\n  if (!wifiManager.isWifiEnabled()) {\r\n  \t// wifi 没开启\r\n    let failResult = new WifiFailImpl(getErrcode(12005));\r\n  \toption.fail?.(failResult);\r\n  \toption.complete?.(failResult);\r\n  \treturn;\r\n  }\r\n  // 初始化wifi 状态广播监听，后续所有的api，均基于此\r\n  if(Global.mReceiver != null){\r\n  \t// 说明已经注册过了\r\n    let result = UniWifiResult(0,UniErrorSubject,\"startWifi:ok\",null)\r\n\r\n  \toption.success?.(result)\r\n  \toption.complete?.(result)\r\n  \treturn\r\n  }\r\n\r\n\r\n  Global.mReceiver = new CustomBroadcastReceiver(wifiManager)\r\n\r\n  let filter = new IntentFilter()\r\n  filter.addAction(WifiManager.SCAN_RESULTS_AVAILABLE_ACTION)\r\n  // @ts-ignore\r\n  filter.addAction(WifiManager.WIFI_STATE_CHANGED_ACTION)\r\n  // @ts-ignore\r\n  filter.addAction(WifiManager.SUPPLICANT_STATE_CHANGED_ACTION);\r\n\r\n  UTSAndroid.getUniActivity()!.registerReceiver(Global.mReceiver, filter)\r\n\r\n  /**\r\n  \t* activity 被销毁时，取消注册\r\n  \t*/\r\n  UTSAndroid.onAppActivityDestroy(function () {\r\n\r\n  \tif (Global.mReceiver != null) {\r\n  \t\tUTSAndroid.getUniActivity()!.unregisterReceiver(Global.mReceiver)\r\n  \t\tGlobal.mReceiver = null\r\n\r\n  \t\tGlobal.scanList = []\r\n  \t\tGlobal.onGetWifiListCallback = null\r\n  \t\tGlobal.onWifiConnectCallbackList = []\r\n  \t\tGlobal.onWifiConnectWithPartialInfoCallbackList = []\r\n  \t}\r\n\r\n  });\r\n  startWifiScaning = true\r\n  // 开始扫描\r\n  wifiManager.startScan()\r\n\r\n  let result = UniWifiResult(0,UniErrorSubject,\"startWifi:ok\",null)\r\n  option.success?.(result)\r\n  option.complete?.(result)\r\n\r\n}\r\n\r\n@Suppress(\"DEPRECATION\")\r\nexport function startWifi(option : WifiOption) {\r\n\r\n  /**\r\n   * 准备权限\r\n   */\r\n  let permissionNeed = [\"android.permission.ACCESS_FINE_LOCATION\"];\r\n  UTSAndroid.requestSystemPermission(UTSAndroid.getUniActivity()!, permissionNeed, function (allRight:boolean,_grantedList:string[]) {\r\n  \tif (allRight) {\r\n  \t\t// 交给目前的location 引擎，真实执行\r\n  \t\tstartWifiImpl(option)\r\n  \t}\r\n  }, function (_doNotAskAgain:boolean,_grantedList:string[]) {\r\n  \tlet err = new WifiFailImpl(getErrcode(12001));\r\n  \toption.fail?.(err)\r\n  \toption.complete?.(err)\r\n  })\r\n\r\n}\r\n\r\n/**\r\n\t* 获取wifi列表\r\n\t*/\r\n@Suppress(\"DEPRECATION\")\r\nexport function getWifiList(option : WifiOption) {\r\n\r\n\r\n\tif (Global.mReceiver == null) {\r\n\t\t// 还没调用startWifi 提示报错\r\n    let err = new WifiFailImpl(getErrcode(12000));\r\n\t\toption.fail?.(err)\r\n\t\toption.complete?.(err)\r\n\r\n\t\treturn\r\n\t}\r\n\r\n\tlet wifiManager : WifiManager =\r\n\t\tUTSAndroid.getAppContext()!.getSystemService(Context.WIFI_SERVICE) as WifiManager\r\n\r\n  if(option.success != null){\r\n    Global.supendGetWifiSuccess = option.success\r\n  }\r\n\tif(option.complete != null){\r\n    Global.supendGetWifiComplete = option.complete\r\n  }\r\n\r\n\twifiManager.startScan()\r\n\r\n}\r\n\r\n\r\n\r\n/**\r\n\t* wifi 链接成功的回调注册\r\n\t*/\r\nexport function onWifiConnected(callback : UniWifiResultCallback) {\r\n\tGlobal.onWifiConnectCallbackList.push(callback)\r\n}\r\n\r\n\r\nexport function onWifiConnectedWithPartialInfo(callback : UniWifiResultCallbackWithPartialInfo) {\r\n\tGlobal.onWifiConnectWithPartialInfoCallbackList.push(callback)\r\n}\r\n\r\n\r\n/**\r\n * wifi 链接成功的回调取消注册\r\n */\r\nexport function offWifiConnected(callback? : UniWifiResultCallback) {\r\n\r\n\tif(callback == null){\r\n\t\tGlobal.onWifiConnectCallbackList = []\r\n\t\treturn\r\n\t}\r\n\r\n\tlet callbackIndex = Global.onWifiConnectCallbackList.indexOf(callback)\r\n\tif (callbackIndex >= 0) {\r\n\t\tGlobal.onWifiConnectCallbackList.splice(callbackIndex, 1);\r\n\t}\r\n}\r\n\r\n/**\r\n * 不具备详细信息的wifi 反注册\r\n */\r\nexport function offWifiConnectedWithPartialInfo(callback? : UniWifiResultCallbackWithPartialInfo) {\r\n\r\n\tif(callback == null){\r\n\t\tGlobal.onWifiConnectWithPartialInfoCallbackList = []\r\n\t\treturn\r\n\t}\r\n\r\n\tlet callbackIndex = Global.onWifiConnectWithPartialInfoCallbackList.indexOf(callback)\r\n\tif (callbackIndex >= 0) {\r\n\t\tGlobal.onWifiConnectWithPartialInfoCallbackList.splice(callbackIndex, 1);\r\n\t}\r\n}\r\n\r\n/**\r\n\t* 注册Wifi列表的监听事件\r\n\t*/\r\nexport function onGetWifiList(callback : UniGetWifiListCallback) {\r\n\tGlobal.onGetWifiListCallback = callback\r\n}\r\n\r\n/**\r\n * 取消注册Wifi列表的监听事件\r\n */\r\nexport function offGetWifiList(callback? : UniWifiCallback) {\r\n\tGlobal.onGetWifiListCallback = null\r\n\tGlobal.supendGetWifiComplete = null\r\n\tGlobal.supendGetWifiSuccess = null\r\n}\r\n\r\n\r\n/**\r\n * 真正执行wifi链接逻辑\r\n */\r\nfunction realWifiConnect(option : WifiConnectOption){\r\n\r\n\tif (Global.mReceiver == null || Global.scanList.length < 1) {\r\n\r\n    let err = new WifiFailImpl(getErrcode(12000));\r\n\t\toption.fail?.(err)\r\n\t\toption.complete?.(err)\r\n\r\n\t\treturn\r\n\t}\r\n\r\n\t// 执行后续的逻辑\r\n\tlet scanWifiInfo : AndroidUniWifiInfo | null = null\r\n\tfor (let scanResult in Global.scanList) {\r\n\t\tif (scanResult.SSID.equals(option.SSID)) {\r\n\t\t\tscanWifiInfo = scanResult\r\n\t\t}\r\n\t}\r\n\r\n\tif (scanWifiInfo == null) {\r\n\t\t// 不在扫描列表中返回错误\r\n    let err = new WifiFailImpl(getErrcode(12000));\r\n\t\toption.fail?.(err)\r\n\t\toption.complete?.(err)\r\n\t\treturn\r\n\t}\r\n\r\n\tlet wifiConfigration = wrapWifiConfiguration(scanWifiInfo.SSID, option.password, scanWifiInfo.securityType);\r\n\twifiConfigration.BSSID = scanWifiInfo.BSSID\r\n\tlet wifiManager : WifiManager =\r\n\t\tUTSAndroid.getAppContext()!.getSystemService(Context.WIFI_SERVICE) as WifiManager\r\n\r\n\t// 如果已经存在了指定wifi 配置，移除之\r\n\tlet targetExistConfig : WifiConfiguration | null = null\r\n\tlet existingConfigs = wifiManager.getConfiguredNetworks();\r\n\tfor (let existingConfig in existingConfigs) {\r\n\t\tif (existingConfig.SSID.equals(\"\\\"\" + option.SSID + \"\\\"\")) {\r\n\t\t\ttargetExistConfig = existingConfig\r\n\t\t}\r\n\t}\r\n\t// 如果wifi已经保存了当前ssid的配置，可能是别的应用添加的。android系统要求，需要删除掉重新添加\r\n\tif (targetExistConfig != null) {\r\n\t\tlet removeRet = wifiManager.removeNetwork(targetExistConfig.networkId);\r\n\r\n\t\tif (!removeRet) {\r\n\r\n\t\t\t// add since 2023-03-28，如果当前系统大于等于android10， 则明确当前系统不支持\r\n\t\t\tif(Build.VERSION.SDK_INT > 28){\r\n\t\t\t\t// 系统大于android 9\r\n        let err = new WifiFailImpl(getErrcode(12001));\r\n\t\t\t\toption.fail?.(err)\r\n\t\t\t\toption.complete?.(err)\r\n\t\t\t}else{\r\n\t\t\t\t// 移除之前的配置失败了，返回错误，需要用户手动取消保存一下\r\n        let err = new WifiFailImpl(getErrcode(12013));\r\n\t\t\t\toption.fail?.(err)\r\n\t\t\t\toption.complete?.(err)\r\n\t\t\t}\r\n\r\n\r\n\t\t\treturn\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tlet currentConnect = wifiManager.getConnectionInfo()\r\n\tif (currentConnect.networkId >= 0) {\r\n\t\twifiManager.disableNetwork(currentConnect.networkId)\r\n\t} else {\r\n\t\twifiManager.removeNetwork(currentConnect.networkId)\r\n\t}\r\n\twifiManager.disconnect()\r\n\r\n\tlet connected = false;\r\n\ttry {\r\n\r\n\t\tlet netID = wifiManager.addNetwork(wifiConfigration);\r\n\t\t// 如果-1 说明没添加上，报错即可\r\n\t\tif (netID < 0) {\r\n      let err = new WifiFailImpl(getErrcode(12002));\r\n\t\t\toption.fail?.(err)\r\n\t\t\toption.complete?.(err)\r\n\r\n\t\t\treturn\r\n\t\t}\r\n\r\n\r\n\t\tlet enabled = wifiManager.enableNetwork(netID, true);\r\n\t\tif (!enabled) {\r\n      let err = new WifiFailImpl(getErrcode(12007));\r\n\t\t\toption.fail?.(err)\r\n\t\t\toption.complete?.(err)\r\n\r\n\t\t\treturn\r\n\t\t}\r\n\t\tconnected = wifiManager.reconnect();\r\n\r\n\t} catch (e) {\r\n\t\tconnected = false;\r\n\t\tconsole.log(e);\r\n\t}\r\n\r\n\tif (!connected) {\r\n\t\t// 出错了，返回错误\r\n\t\t// 兜底的报错\r\n    let err = new WifiFailImpl(getErrcode(12010));\r\n\t\toption.fail?.(err)\r\n\t\toption.complete?.(err)\r\n\t\treturn\r\n\t}\r\n\r\n  let result = new UniWifiResult(0,UniErrorSubject,\"getWifiList:ok\",null)\r\n\r\n\twifiManager.saveConfiguration()\r\n\t//scanWifiInfo 根据 partialInfo 填充给返回字段\r\n\tif (option.partialInfo != null && option.partialInfo == true) {\r\n\t\tlet wifiPartialInfo : UniWifiInfo = {\r\n\t\t\tSSID: scanWifiInfo.SSID\r\n\t\t}\r\n\t\tresult.wifi = wifiPartialInfo\r\n\t} else {\r\n\t\tresult.wifi = wrapUniWifiInfoFromAndroid(scanWifiInfo)\r\n\t}\r\n\r\n\r\n\toption.success?.(result)\r\n\toption.complete?.(result)\r\n}\r\n\r\n/**\r\n * 链接指定wifi\r\n */\r\n@Suppress(\"UNUSED_PARAMETER\", \"DEPRECATION\")\r\nexport function connectWifi(option : WifiConnectOption) {\r\n\r\n\tif (option.maunal == true) {\r\n\t\t// 指定了手动模式\r\n\t\tlet manunalIntent = new Intent(android.provider.Settings.ACTION_WIFI_SETTINGS);\r\n\t\tUTSAndroid.getUniActivity()!.startActivity(manunalIntent);\r\n\r\n    \r\n     let result = new UniWifiResult(0,UniErrorSubject,\"connectWifi:ok\",null)\r\n\r\n\t\toption.success?.(result)\r\n\t\toption.complete?.(result)\r\n\t\treturn\r\n\t}\r\n\r\n\r\n\r\n\t// add since 2022-03-28 ，增加逻辑，如果正在扫描中，则可以等待5s\r\n\tif(startWifiScaning){\r\n\t\tlet taskCount = 0\r\n\t\tlet taskId:number  = 0\r\n\t\ttaskId = setInterval(function(){\r\n\r\n\t\t\ttaskCount += 1;\r\n\t\t\tif(taskCount >= 5 || startWifiScaning == false){\r\n\t\t\t\t// 超过10s了。或者扫描过程结束了\r\n\t\t\t\tclearInterval(taskId)\r\n\t\t\t\trealWifiConnect(option)\r\n\t\t\t}\r\n\t\t},2000)\r\n\r\n\t\tUTSAndroid.onAppActivityDestroy(function () {\r\n\t\t\tclearInterval(taskId)\r\n\t\t});\r\n\t}else{\r\n\t\trealWifiConnect(option)\r\n\t}\r\n\r\n\r\n\r\n}\r\n\r\n\r\n/**\r\n\t* 关闭wifi\r\n\t*/\r\nexport function stopWifi(option : WifiOption) {\r\n\t// 需要先开启wifi,才能使用后续的功能\r\n\tif (Global.mReceiver == null) {\r\n    let err = new WifiFailImpl(getErrcode(12000));\r\n\t\toption.fail?.(err)\r\n\t\toption.complete?.(err)\r\n\r\n\t\treturn\r\n\t}\r\n\ttry {\r\n\t\tUTSAndroid.getUniActivity()!.unregisterReceiver(Global.mReceiver)\r\n\t} catch (e) {\r\n\t\t// 多次调用\r\n\t\t//TODO handle the exception\r\n\t}\r\n\r\n\tGlobal.onGetWifiListCallback = null\r\n\tGlobal.onWifiConnectWithPartialInfoCallbackList = []\r\n\tGlobal.onWifiConnectCallbackList = []\r\n\tGlobal.mReceiver = null\r\n\r\n  let ret = new UniWifiResult(0,UniErrorSubject,\"stopWifi:ok\",null)\r\n\toption.success?.(ret)\r\n\toption.complete?.(ret)\r\n\r\n}\r\n\r\n/**\r\n * 获取当前连接中的wifi信息\r\n */\r\n@Suppress(\"DEPRECATION\")\r\nexport function getConnectedWifi(option : GetConnectedWifiOptions) {\r\n\r\n\tlet wifiInfo : UniWifiInfo = {\r\n\t\tSSID: \"\"\r\n\t}\r\n\r\n\r\n\tif (Global.mReceiver == null) {\r\n\t\t// 还没调用startWifi 提示报错\r\n    let err = new WifiFailImpl(getErrcode(12000));\r\n\t\toption.fail?.(err)\r\n\t\toption.complete?.(err)\r\n\r\n\t\treturn\r\n\t}\r\n\r\n\t// 需要先校验权限，没有位置权限无法获取wifi\r\n\tif (ActivityCompat.checkSelfPermission(UTSAndroid.getUniActivity()!, Manifest.permission.ACCESS_FINE_LOCATION) != PackageManager.PERMISSION_GRANTED) {\r\n\t\t// 尚不具备权限，返回错误\r\n    let err = new WifiFailImpl(getErrcode(12001));\r\n\t\toption.fail?.(err)\r\n\t\toption.complete?.(err)\r\n\t\treturn;\r\n\t}\r\n\r\n\r\n\r\n\tconst context = UTSAndroid.getAppContext();\r\n\tif (context != null) {\r\n\t\tconst wm = context.getSystemService(\r\n\t\t\tContext.WIFI_SERVICE\r\n\t\t) as WifiManager;\r\n\t\t// 测试android 12上可以使用\r\n\t\t//@ts-ignore\r\n\t\tconst winfo = wm.getConnectionInfo();\r\n\r\n\t\twifiInfo = wrapUniWifiInfoFromConnectInfo(winfo);\r\n\r\n    let res = new UniWifiResult(0,UniErrorSubject,\"getConnectedWifi:ok\",null)\r\n\r\n\t\t// 判断一下是否wifi 关闭了\r\n\t\tif (option.partialInfo!= null) {\r\n\t\t\tlet ret : UniWifiInfo = {\r\n\t\t\t\tSSID: wifiInfo.SSID\r\n\t\t\t}\r\n\t\t\tres.wifi = ret;\r\n\t\t} else {\r\n\t\t\tif (wifiInfo.BSSID == null || zeroCountNum(wifiInfo.BSSID) > 3) {\r\n         let err = new WifiFailImpl(getErrcode(12005));\r\n\t\t\t\toption.fail?.(err)\r\n\t\t\t\toption.complete?.(err)\r\n\t\t\t\treturn\r\n\t\t\t}\r\n\t\t\tres.wifi = wifiInfo;\r\n\t\t}\r\n\r\n\r\n\t\toption.success?.(res)\r\n\t\toption.complete?.(res)\r\n\t\treturn\r\n\t}\r\n\r\n  let err = new WifiFailImpl(getErrcode(12000));\r\n\toption.fail?.(err)\r\n\toption.complete?.(err)\r\n}\r\n\r\n","/**\r\n * Wifi 函数通用入参封装\r\n */\r\nexport type WifiOption = {\r\n\tsuccess ?: (res : UniWifiResult) => void;\r\n\tfail ?: (res : UniError) => void;\r\n\tcomplete ?: (res : any) => void;\r\n};\r\n\r\n/**\r\n * Wifi 链接参数封装\r\n */\r\nexport type WifiConnectOption = {\r\n\tSSID ?: string;\r\n\tBSSID ?: string;\r\n\tpassword ?: string;\r\n\tmaunal ?: boolean;\r\n\tpartialInfo ?: boolean; //ios不生效\r\n\tsuccess ?: (res : UniWifiResult) => void;\r\n\tfail ?: (res : UniError) => void;\r\n\tcomplete ?: (res : any) => void;\r\n}\r\n\r\n/**\r\n * 获取当前链接的wifi信息\r\n */\r\nexport type GetConnectedWifiOptions = {\r\n\tpartialInfo ?: boolean\r\n\tsuccess ?: (res : UniWifiResult) => void\r\n\tfail ?: (res : UniError) => void\r\n\tcomplete ?: (res : any) => void\r\n}\r\n\r\n/*\r\n * 对外暴露的wifi信息\r\n */\r\nexport type UniWifiInfo = {\r\n\tSSID : string;\r\n\tBSSID ?: string;\r\n\tsecure ?: boolean;\r\n\tsignalStrength ?: number;\r\n\tfrequency ?: number;\r\n}\r\n\r\nexport type UniWifiInfoWithPartialInfo = {\r\n\tSSID : string;\r\n}\r\n\r\n\r\nexport type UniWifiResult = {\r\n\terrCode : number,\r\n\terrSubject : string,\r\n\terrMsg : string,\r\n\twifi : UniWifiInfo | null\r\n}\r\n\r\nexport type UniWifiCallback = () => void\r\n\r\nexport type UniGetWifiListCallback = (wifiInfo:UTSJSONObject) => void\r\n\r\nexport type UniWifiResultCallback = (wifiInfo:UniWifiResult) => void\r\n\r\nexport type UniWifiResultCallbackWithPartialInfo = (wifiInfo:UniWifiInfoWithPartialInfo) => void\r\n\r\n\r\nexport type StartWifi = (option : WifiOption) => void\r\n\r\nexport type StopWifi = (option : WifiOption) => void\r\n\r\nexport type GetWifiList = (option : WifiOption) => void\r\n\r\nexport type OnGetWifiList = (callback : UniGetWifiListCallback) => void\r\n\r\nexport type OffGetWifiList = (callback : UniWifiCallback) => void\r\n\r\nexport type GetConnectedWifi = (option : GetConnectedWifiOptions) => void\r\n\r\nexport type ConnectWifi = (option : WifiConnectOption) => void\r\n\r\nexport type OnWifiConnected = (callback : UniWifiResultCallback) => void\r\n\r\nexport type OnWifiConnectedWithPartialInfo = (callback : UniWifiResultCallbackWithPartialInfo) => void\r\n\r\nexport type OffWifiConnected = (callback : UniWifiCallback | null) => void\r\n\r\nexport type OffWifiConnectedWithPartialInfo = (callback : UniWifiResultCallbackWithPartialInfo | null) => void\r\n\r\nexport type SetWifiList = (option : WifiOption) => void\r\n\r\n\r\n/**\r\n * 错误码\r\n * - 12000 尚未初始化\r\n * - 12001 当前系统不支持相关能力\r\n * - 12002 密码错误\r\n * - 12005 Android 特有，未打开 Wi-Fi 开关\r\n * - 12007 用户拒绝授权链接 Wi-Fi\r\n * - 12010 系统其他错误\r\n * - 12013 系统保存的 Wi-Fi 配置过期，建议忘记 Wi-Fi 后重试，仅 Android 支持\r\n */\r\nexport type WifiErrorCode = 12000 |12001 | 12002 |  12005 | 12007 | 12010 | 12013;\r\n\r\nexport interface WifiFail extends IUniError{\r\n\terrCode: WifiErrorCode\r\n};\r\n\r\n\r\n\r\ninterface Uni {\r\n\t/**\r\n\t * 初始化Wi-Fi模块\r\n\t *\r\n\t * @param {WifiOption} option\r\n\t * @tutorial https://uniapp.dcloud.net.cn/api/system/wifi.html#startwifi\r\n\t * @uniPlatform {\r\n\t *    \"app\": {\r\n\t *        \"android\": {\r\n\t *            \"osVer\": \"4.4.4\",\r\n\t *            \"uniVer\": \"3.7.0\",\r\n\t *            \"unixVer\": \"3.9.0\"\r\n\t *        },\r\n\t *        \"ios\": {\r\n\t *            \"osVer\": \"9.0\",\r\n\t *            \"uniVer\": \"3.7.7\",\r\n\t *            \"unixVer\": \"3.9.0\"\r\n\t *   \t  }\r\n\t *    }\r\n\t * }\r\n\t * @uniVersion 3.7.7\r\n\t * @uniVueVersion 2,3  //支持的vue版本\r\n\t * @autotest { after: 'stopWifi' }\r\n\t */\r\n\tstartWifi(option : WifiOption): void,\r\n\t/**\r\n\t * 关闭 Wi-Fi 模块\r\n\t *\r\n\t * @param {WifiOption} option\r\n\t * @tutorial https://uniapp.dcloud.net.cn/api/system/wifi.html#stopwifi\r\n\t * @uniPlatform {\r\n\t *    \"app\": {\r\n\t *        \"android\": {\r\n\t *            \"osVer\": \"4.4.4\",\r\n\t *            \"uniVer\": \"3.7.0\",\r\n\t *            \"unixVer\": \"3.9.0\"\r\n\t *        },\r\n\t *        \"ios\": {\r\n\t *            \"osVer\": \"9.0\",\r\n\t *            \"uniVer\": \"3.7.7\",\r\n\t *            \"unixVer\": \"3.9.0\"\r\n\t *   \t  }\r\n\t *    }\r\n\t * }\r\n\t * @uniVersion 3.7.7\r\n\t * @uniVueVersion 2,3  //支持的vue版本\r\n\t * @autotest { before: 'startWifi' }\r\n\t */\r\n\tstopWifi(option : WifiOption) : void,\r\n\t/**\r\n\t * @param {WifiConnectOption} option\r\n\t * @tutorial https://uniapp.dcloud.net.cn/api/system/wifi.html#connectWifi\r\n\t * @uniPlatform {\r\n\t *    \"app\": {\r\n\t *        \"android\": {\r\n\t *            \"osVer\": \">=4.4 && <10.0\",\r\n\t *            \"uniVer\": \"3.7.0\",\r\n\t *            \"unixVer\": \"3.9.0\"\r\n\t *        },\r\n\t *        \"ios\": {\r\n\t *            \"osVer\": \"9.0\",\r\n\t *            \"uniVer\": \"3.7.7\",\r\n\t *            \"unixVer\": \"3.9.0\"\r\n\t *   \t  }\r\n\t *    }\r\n\t * }\r\n\t * @uniVersion 3.7.7\r\n\t * @uniVueVersion 2,3  //支持的vue版本\r\n\t * @autotest {\r\n\t\tgenerated: false,\r\n\t\tpollution: false,\r\n\t\tcases:[\r\n\t\t\t{\r\n\t\t\t\tbefore: 'startWifi',\r\n\t\t\t\tafter: 'stopWifi',\r\n\t\t\t\tinput: [{\r\n\t\t\t\t\tmaunal:false,\r\n\t\t\t\t\tSSID:\"Xiaomi_20D0\",\r\n\t\t\t\t\tpassword:\"streamApp!2016\",\r\n\t\t\t\t}],\r\n\t\t\t\toutput:{\r\n\t\t\t\t\t\tcallbackType: 'success',\r\n\t\t\t\t\t\tvalue: { errCode: 12013 ,errMsg: \"connectWifi:wifi config may be expired\",errSubject: \"uni-connectWifi\"}\r\n\t\t\t\t\t}\r\n\t\t\t}\r\n\t\t]\r\n\t}\r\n\t*/\r\n\tconnectWifi(option : WifiConnectOption) : void,\r\n\t/**\r\n\t * 请求获取 Wi-Fi 列表。wifiList 数据会在 onGetWifiList 注册的回调中返回。\r\n\t * @param {WifiOption} option\r\n\t * @tutorial https://uniapp.dcloud.net.cn/api/system/wifi.html#getWifiList\r\n\t * @uniPlatform {\r\n\t *    \"app\": {\r\n\t *        \"android\": {\r\n\t *            \"osVer\": \"4.4.4\",\r\n\t *            \"uniVer\": \"3.7.0\",\r\n\t *            \"unixVer\": \"3.9.0\"\r\n\t *        },\r\n\t *        \"ios\": {\r\n\t *            \"osVer\": \"9.0\",\r\n\t *            \"uniVer\": \"3.7.7\",\r\n\t *            \"unixVer\": \"3.9.0\"\r\n\t *   \t  }\r\n\t *    }\r\n\t * }\r\n\t * @uniVersion 3.7.7\r\n\t * @uniVueVersion 2,3  //支持的vue版本\r\n\t * @autotest { before: 'startWifi', after: 'stopWifi' }\r\n\t*/\r\n\tgetWifiList(option : WifiOption) : void,\r\n\t/**\r\n\t * 监听获取到 Wi-Fi 列表数据事件。\r\n\t *\r\n\t * @param {UniWifiCallback} callback\r\n\t * @tutorial https://uniapp.dcloud.net.cn/api/system/wifi.html#onGetWifiList\r\n\t * @uniPlatform {\r\n\t *    \"app\": {\r\n\t *        \"android\": {\r\n\t *            \"osVer\": \"4.4.4\",\r\n\t *            \"uniVer\": \"3.7.0\",\r\n\t *            \"unixVer\": \"3.9.0\"\r\n\t *        },\r\n\t *        \"ios\": {\r\n\t *            \"osVer\": \"9.0\",\r\n\t *            \"uniVer\": \"3.7.7\",\r\n\t *            \"unixVer\": \"3.9.0\"\r\n\t *   \t  }\r\n\t *    }\r\n\t * }\r\n\t * @uniVersion 3.7.7\r\n\t * @uniVueVersion 2,3  //支持的vue版本\r\n\t * @autotest  { expectCallback: true }\r\n\t * @autotest {\r\n\t\t generated: false,\r\n\t\t pollution: false,\r\n\t\t expectCallback: true,\r\n\t\t before: 'startWifi',\r\n\t\t after: 'onGetWifiListAfter',\r\n\t\t cases: [\r\n\t\t\t {\r\n\t\t\t\t output: {\r\n\t\t\t\t\t value: 0,\r\n\t\t\t\t\t returnKey: '.wifiList.length',\r\n\t\t\t\t\t jestExpectSyntax: 'toBeGreaterThan'\r\n\t\t\t\t },\r\n\t\t\t }\r\n\t\t ]\r\n\t}\r\n\t */\r\n\tonGetWifiList(callback : UniGetWifiListCallback) : void,\r\n\t/**\r\n\t * 移除获取到 Wi-Fi 列表数据事件的监听函数。\r\n\t *\r\n\t * @param {UniWifiCallback} callback\r\n\t * @tutorial https://uniapp.dcloud.net.cn/api/system/wifi.html#offGetWifiList\r\n\t * @uniPlatform {\r\n\t *    \"app\": {\r\n\t *        \"android\": {\r\n\t *            \"osVer\": \"4.4.4\",\r\n\t *            \"uniVer\": \"3.7.0\",\r\n\t *            \"unixVer\": \"3.9.0\"\r\n\t *        },\r\n\t *        \"ios\": {\r\n\t *            \"osVer\": \"9.0\",\r\n\t *            \"uniVer\": \"3.7.7\",\r\n\t *            \"unixVer\": \"3.9.0\"\r\n\t *   \t  }\r\n\t *    }\r\n\t * }\r\n\t * @uniVersion 3.7.7\r\n\t * @uniVueVersion 2,3  //支持的vue版本\r\n\t * @autotest { expectCallback: true }\r\n\t */\r\n\toffGetWifiList(callback : UniWifiCallback) : void,\r\n\t/**\r\n\t * 获取已连接的 Wi-Fi 信息\r\n\t *\r\n\t * @param {GetConnectedWifiOptions} option\r\n\t * @tutorial https://uniapp.dcloud.net.cn/api/system/wifi.html#getConnectedWifi\r\n\t * @uniPlatform {\r\n\t *    \"app\": {\r\n\t *        \"android\": {\r\n\t *            \"osVer\": \"4.4.4\",\r\n\t *            \"uniVer\": \"3.7.0\",\r\n\t *            \"unixVer\": \"3.9.0\"\r\n\t *        },\r\n\t *        \"ios\": {\r\n\t *            \"osVer\": \"9.0\",\r\n\t *            \"uniVer\": \"3.7.7\",\r\n\t *            \"unixVer\": \"3.9.0\"\r\n\t *   \t  }\r\n\t *    }\r\n\t * }\r\n\t * @uniVersion 3.7.7\r\n\t * @uniVueVersion 2,3  //支持的vue版本\r\n\t * @autotest { before: 'startWifi', after: 'stopWifi' }\r\n\t */\r\n\tgetConnectedWifi(option : GetConnectedWifiOptions) : void,\r\n\t/**\r\n\t * 监听连接上 Wi-Fi 的事件\r\n\t *\r\n\t * @param {UniWifiCallback} callback\r\n\t * @tutorial https://uniapp.dcloud.net.cn/api/system/wifi.html#onWifiConnected\r\n\t * @uniPlatform {\r\n\t *    \"app\": {\r\n\t *        \"android\": {\r\n\t *            \"osVer\": \"4.4.4\",\r\n\t *            \"uniVer\": \"3.7.0\",\r\n\t *            \"unixVer\": \"3.9.0\"\r\n\t *        },\r\n\t *        \"ios\": {\r\n\t *            \"osVer\": \"9.0\",\r\n\t *            \"uniVer\": \"3.7.7\",\r\n\t *            \"unixVer\": \"3.9.0\"\r\n\t *   \t  }\r\n\t *    }\r\n\t * }\r\n\t * @uniVersion 3.7.7\r\n\t * @uniVueVersion 2,3  //支持的vue版本\r\n\t * @autotest { expectCallback: true }\r\n\t */\r\n\tonWifiConnected(callback : UniWifiResultCallback) : void,\r\n\t/**\r\n\t * 监听连接上 Wi-Fi 的事件。\r\n\t *\r\n\t * @param {UniWifiCallback} callback\r\n\t * @tutorial https://uniapp.dcloud.net.cn/api/system/wifi.html#onWifiConnectedWithPartialInfo\r\n\t * @uniPlatform {\r\n\t *    \"app\": {\r\n\t *        \"android\": {\r\n\t *            \"osVer\": \"4.4.4\",\r\n\t *            \"uniVer\": \"3.7.0\",\r\n\t *            \"unixVer\": \"3.9.0\"\r\n\t *        },\r\n\t *        \"ios\": {\r\n\t *            \"osVer\": \"9.0\",\r\n\t *            \"uniVer\": \"3.7.7\",\r\n\t *            \"unixVer\": \"3.9.0\"\r\n\t *   \t  }\r\n\t *    }\r\n\t * }\r\n\t * @uniVersion 3.7.7\r\n\t * @uniVueVersion 2,3  //支持的vue版本\r\n\t * @autotest { expectCallback: true }\r\n\t */\r\n\tonWifiConnectedWithPartialInfo(callback : UniWifiResultCallbackWithPartialInfo) : void,\r\n\t/**\r\n\t * 移除连接上 Wi-Fi 的事件的监听函数。\r\n\t *\r\n\t * @param {UniWifiCallback} callback\r\n\t * @tutorial https://uniapp.dcloud.net.cn/api/system/wifi.html#offWifiConnected\r\n\t * @uniPlatform {\r\n\t *    \"app\": {\r\n\t *        \"android\": {\r\n\t *            \"osVer\": \"4.4.4\",\r\n\t *            \"uniVer\": \"3.7.0\",\r\n\t *            \"unixVer\": \"3.9.0\"\r\n\t *        },\r\n\t *        \"ios\": {\r\n\t *            \"osVer\": \"9.0\",\r\n\t *            \"uniVer\": \"3.7.7\",\r\n\t *            \"unixVer\": \"3.9.0\"\r\n\t *   \t  }\r\n\t *    }\r\n\t * }\r\n\t * @uniVersion 3.7.7\r\n\t * @uniVueVersion 2,3  //支持的vue版本\r\n\t * @autotest { expectCallback: true }\r\n\t */\r\n\toffWifiConnected(callback : UniWifiCallback | null) : void,\r\n\t/**\r\n\t * 移除连接上 Wi-Fi 的事件的监听函数。\r\n\t *\r\n\t * @param {UniWifiCallback} callback\r\n\t * @tutorial https://uniapp.dcloud.net.cn/api/system/wifi.html#offWifiConnectedWithPartialInfo\r\n\t * @uniPlatform {\r\n\t *    \"app\": {\r\n\t *        \"android\": {\r\n\t *            \"osVer\": \"x\",\r\n\t *            \"uniVer\": \"x\",\r\n\t *            \"unixVer\": \"x\"\r\n\t *        },\r\n\t *        \"ios\": {\r\n\t *            \"osVer\": \"x\",\r\n\t *            \"uniVer\": \"x\",\r\n\t *            \"unixVer\": \"x\"\r\n\t *   \t  }\r\n\t *    }\r\n\t * }\r\n\t * @uniVersion 3.7.7\r\n\t * @uniVueVersion 2,3  //支持的vue版本\r\n\t * @autotest { expectCallback: true }\r\n\t */\r\n\toffWifiConnectedWithPartialInfo(callback : UniWifiResultCallbackWithPartialInfo | null) : void,\r\n\t/**\r\n\t * SetWifiList  暂未实现\r\n\t *\r\n\t * @uniPlatform {\r\n\t *    \"app\": {\r\n\t *        \"android\": {\r\n\t *            \"osVer\": \"x\",\r\n\t *            \"uniVer\": \"x\",\r\n\t *            \"unixVer\": \"x\"\r\n\t *        },\r\n\t *        \"ios\": {\r\n\t *            \"osVer\": \"x\",\r\n\t *            \"uniVer\": \"x\",\r\n\t *            \"unixVer\": \"x\"\r\n\t *   \t  }\r\n\t *    }\r\n\t * }\r\n\t */\r\n\tsetWifiList(option : WifiOption) : void,\r\n}\r\n","import { WifiErrorCode, WifiFail} from \"./interface.uts\"\r\n\r\n/**\r\n * 错误主题\r\n */\r\nexport const UniErrorSubject = 'uni-wifi';\r\n/**\r\n * 错误码\r\n * @UniError\r\n */\r\nexport const WifiUniErrors : Map<WifiErrorCode, string> = new Map([\r\n\r\n\t/**\r\n\t * 未先调用 startWifi 接口\r\n\t */\r\n\t[12000, 'not init.'],\r\n\t/**\r\n\t * 当前系统不支持相关能力\r\n\t */\r\n\t[12001, 'system not support'],\r\n  /**\r\n   * 密码错误\r\n   */\r\n  [12002, 'password error Wi-Fi'],\r\n\t/**\r\n\t * Android 特有，未打开 Wi-Fi 开关\r\n\t */\r\n\t[12005, 'wifi not turned on'],\r\n\t/**\r\n\t * 用户拒绝授权链接 Wi-Fi\r\n\t */\r\n\t[12007, 'user denied'],\r\n\t/**\r\n\t * 系统其他错误，需要在 errmsg 打印具体的错误原因\r\n\t */\r\n\t[12010, 'unknown error'],\r\n  /**\r\n   * 系统保存的 Wi-Fi 配置过期，建议忘记 Wi-Fi 后重试，仅 Android 支持\r\n   */\r\n  [12013, 'wifi config may be expired'],\r\n\r\n]);\r\n\r\n\r\nexport function getErrcode(errCode : number) : WifiErrorCode {\r\n\tconst res = WifiUniErrors[errCode];\r\n\treturn res == null ? 12000 : errCode;\r\n}\r\n\r\n\r\nexport class WifiFailImpl extends UniError implements WifiFail {\r\n\tconstructor(errCode : WifiErrorCode) {\r\n\t\tsuper();\r\n\t\tthis.errSubject = UniErrorSubject;\r\n\t\tthis.errCode = errCode;\r\n\t\tthis.errMsg = WifiUniErrors[errCode] ?? \"\";\r\n\t}\r\n}\r\n\r\n"],"names":[],"mappings":"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"}