{"version":3,"file":"index.uts","sourceRoot":"","sources":["uni_modules/uni-wifi/utssdk/app-android/index.uts"],"names":[],"mappings":"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","sourcesContent":["import Context from \"android.content.Context\";\r\nimport WifiManager from \"android.net.wifi.WifiManager\";\r\nimport WifiInfo from \"android.net.wifi.WifiInfo\";\r\nimport Manifest from \"android.Manifest\";\r\nimport PackageManager from \"android.content.pm.PackageManager\";\r\nimport ScanResult from \"android.net.wifi.ScanResult\";\r\nimport BroadcastReceiver from \"android.content.BroadcastReceiver\";\r\nimport ActivityCompat from \"androidx.core.app.ActivityCompat\";\r\nimport IntentFilter from \"android.content.IntentFilter\";\r\nimport Intent from \"android.content.Intent\";\r\n\r\nimport WifiConfiguration from 'android.net.wifi.WifiConfiguration';\r\nimport AuthAlgorithm from 'android.net.wifi.WifiConfiguration.AuthAlgorithm';\r\nimport KeyMgmt from 'android.net.wifi.WifiConfiguration.KeyMgmt';\r\nimport TextUtils from 'android.text.TextUtils';\r\nimport Build from 'android.os.Build';\r\n\r\nimport { UniWifiResult, UniWifiInfoWithPartialInfo,GetConnectedWifiOptions, WifiConnectOption, WifiOption, UniWifiInfo,UniWifiCallback ,UniWifiResultCallback,UniWifiResultCallbackWithPartialInfo,UniGetWifiListCallback} from \"../interface.uts\"\r\nimport { WifiFailImpl, getErrcode,UniErrorSubject } from '../unierror';\r\n\r\n\r\n/**\r\n\t* 全局数据储存\r\n\t*/\r\nclass Global {\r\n\tstatic mReceiver : CustomBroadcastReceiver | null = null;\r\n\tstatic WIFI_AUTH_OPEN : string = \"\";\r\n\tstatic WIFI_AUTH_ROAM : String = \"[ESS]\";\r\n\t// 扫描wifi结果\r\n\tstatic scanList : AndroidUniWifiInfo[] = []\r\n\t// 获取wifi列表监听\r\n\tstatic onGetWifiListCallback : UniGetWifiListCallback|null = null\r\n\tstatic supendGetWifiSuccess : UniWifiResultCallback|null = null\r\n\tstatic supendGetWifiComplete :UniWifiResultCallback|null = null\r\n\t// wifi链接监听\r\n\tstatic onWifiConnectCallbackList : UniWifiResultCallback[] = []\r\n\tstatic onWifiConnectWithPartialInfoCallbackList : UniWifiResultCallbackWithPartialInfo[] = []\r\n}\r\n\r\n\r\n/**\r\n\t* 是否是标准的16进制字符\r\n\t*/\r\nfunction isHex(key : string) : boolean {\r\n\tfor (var i = key.length - 1; i >= 0; i--) {\r\n\t\tlet c = key.charAt(i);\r\n\t\tif (!(c >= '0' && c <= '9' || c >= 'A' && c <= 'F' || c >= 'a'\r\n\t\t\t&& c <= 'f')) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\r\n\treturn true;\r\n}\r\n\r\n/**\r\n\t* 判断是否是wep格式的key\r\n\t*/\r\nfunction isHexWepKey(wepKey : string) : boolean {\r\n\tlet len = wepKey.length;\r\n\r\n\t// WEP-40, WEP-104, and some vendors using 256-bit WEP (WEP-232?)\r\n\tif (len != 10 && len != 26 && len != 58) {\r\n\t\treturn false;\r\n\t}\r\n\r\n\treturn isHex(wepKey);\r\n}\r\n/**\r\n * android 平台特有的Wifi信息对象，主要是加了加密信息这个字段\r\n */\r\nexport type AndroidUniWifiInfo = {\r\n\tSSID : string;\r\n\tBSSID ?: string;\r\n\tsecure : boolean;\r\n\tsignalStrength : number;\r\n\tfrequency : number;\r\n\tsecurityType : string;\r\n}\r\n\r\nfunction wrapUniWifiInfoFromAndroid(androidInfo : AndroidUniWifiInfo) : UniWifiInfo {\r\n\tlet ret : UniWifiInfo = {\r\n\t\tSSID: androidInfo.SSID,\r\n\t\tBSSID: androidInfo.BSSID,\r\n\t\tsecure: androidInfo.secure,\r\n\t\tsignalStrength: androidInfo.signalStrength,\r\n\t\tfrequency: androidInfo.frequency,\r\n\t}\r\n\treturn ret\r\n}\r\n/**\r\n * 从扫描结果中提取统一的wifi数据结构\r\n */\r\nfunction wrapUniWifiInfoFromScan(scanResult : ScanResult) : AndroidUniWifiInfo {\r\n\r\n\tlet ret : AndroidUniWifiInfo = {\r\n\t\tSSID: \"\",\r\n\t\tsecure: false,\r\n\t\tsignalStrength: 0,\r\n\t\tfrequency: 0,\r\n\t\tsecurityType: \"NONE\"\r\n\t}\r\n\tif (scanResult != null) {\r\n\t\t// 如果是通过扫描列表得到的数据，进行封装\r\n\t\tret.BSSID = scanResult.BSSID;\r\n\t\tret.SSID = scanResult.SSID;\r\n\r\n\t\tret.signalStrength = scanResult.level;\r\n\t\tret.frequency = scanResult.frequency;\r\n\r\n\t\t// 是否安全，微信的标准是是否需要密码。 来源:https://developers.weixin.qq.com/community/develop/doc/00064cf1790458db19cddf9925ac00?highLine=WifiInfo\r\n\t\tret.secure = false;\r\n\t\tlet capabilities = scanResult.capabilities.trim();\r\n\t\tif ((capabilities.equals(Global.WIFI_AUTH_OPEN) || capabilities.equals(Global.WIFI_AUTH_ROAM))) {\r\n\t\t\tret.secure = false;\r\n\t\t} else {\r\n\t\t\tret.secure = true;\r\n\t\t}\r\n\r\n\t\t/*扩展字段*/\r\n\t\tret.securityType = getSecurityType(scanResult);\r\n\t}\r\n\r\n\treturn ret\r\n}\r\n/**\r\n * 从链接信息中提取统一的wifi数据结构\r\n */\r\nfunction wrapUniWifiInfoFromConnectInfo(connectInfo : WifiInfo) : UniWifiInfo {\r\n\tlet ret : UniWifiInfo = {\r\n\t\tSSID: \"\",\r\n\t\tsecure: false,\r\n\t\tsignalStrength: 0,\r\n\t\tfrequency: 0,\r\n\t}\r\n\r\n\r\n\tif (connectInfo.getSSID() != null) {\r\n\t\tlet s = connectInfo.getSSID();\r\n\t\t// 微信不带，这里需要去掉引号\r\n\t\tif (s.length > 2 && s.charAt(0) == '\"' && s.charAt(s.length - 1) == '\"') {\r\n\t\t\ts = s.substring(1, s.length - 1);\r\n\t\t}\r\n\t\tret.SSID = s;\r\n\t}\r\n\r\n\tret.BSSID = connectInfo.getBSSID();\r\n\t//Android返回的值是-100~0，而微信API规范是0~100，值越大信号越好，需要+100拉齐\r\n\tret.signalStrength = connectInfo.getRssi() + 100;\r\n\tret.frequency = connectInfo.getFrequency();\r\n\r\n\r\n\treturn ret\r\n}\r\n\r\n\r\n/**\r\n * 连接wifi时使用，根据用户输入内容包装为系统需要的wifi配置对象\r\n **/\r\n@Suppress(\"DEPRECATION\")\r\nfunction wrapWifiConfiguration(SSID : string, password ?: string, passwordType : string) : WifiConfiguration {\r\n\r\n\tlet config = new WifiConfiguration();\r\n\tconfig.status = WifiConfiguration.Status.ENABLED;\r\n\tconfig.allowedAuthAlgorithms.clear();\r\n\tconfig.allowedGroupCiphers.clear();\r\n\tconfig.allowedKeyManagement.clear();\r\n\tconfig.allowedPairwiseCiphers.clear();\r\n\tconfig.allowedProtocols.clear();\r\n\tconfig.SSID = \"\\\"\".concat(SSID).concat(\"\\\"\");\r\n\r\n\r\n\t// nopass\r\n\tif (\"NONE\".equals(passwordType) || password == null) {\r\n\t\tconfig.allowedKeyManagement.set(WifiConfiguration.KeyMgmt.NONE);\r\n\t}\r\n\t// wep\r\n\telse if (\"WEP\".equals(passwordType)) {\r\n\t\tif (password != null && !TextUtils.isEmpty(password)) {\r\n\t\t\tif (isHexWepKey(password)) {\r\n\t\t\t\tconfig.wepKeys[0] = password;\r\n\t\t\t} else {\r\n\t\t\t\tconfig.wepKeys[0] = \"\\\"\".concat(password).concat(\"\\\"\");\r\n\t\t\t}\r\n\t\t}\r\n\t\tconfig.allowedAuthAlgorithms.set(AuthAlgorithm.OPEN);\r\n\t\tconfig.allowedAuthAlgorithms.set(AuthAlgorithm.SHARED);\r\n\t\tconfig.allowedKeyManagement.set(KeyMgmt.NONE);\r\n\t\tconfig.wepTxKeyIndex = 0;\r\n\t}\r\n\t// wpa\r\n\telse if (\"WPA\".equals(passwordType)) {\r\n\t\tconfig.allowedProtocols.set(WifiConfiguration.Protocol.RSN);\r\n\t\tconfig.allowedProtocols.set(WifiConfiguration.Protocol.WPA);\r\n\t\tconfig.allowedKeyManagement.set(WifiConfiguration.KeyMgmt.WPA_PSK);\r\n\t\tconfig.allowedPairwiseCiphers.set(WifiConfiguration.PairwiseCipher.CCMP);\r\n\t\tconfig.allowedPairwiseCiphers.set(WifiConfiguration.PairwiseCipher.TKIP);\r\n\t\tconfig.allowedGroupCiphers.set(WifiConfiguration.GroupCipher.WEP40);\r\n\t\tconfig.allowedGroupCiphers.set(WifiConfiguration.GroupCipher.WEP104);\r\n\t\tconfig.allowedGroupCiphers.set(WifiConfiguration.GroupCipher.CCMP);\r\n\t\tconfig.allowedGroupCiphers.set(WifiConfiguration.GroupCipher.TKIP);\r\n\t\tconfig.preSharedKey = \"\\\"\".concat(password).concat(\"\\\"\");\r\n\t}\r\n\r\n\treturn config;\r\n}\r\n\r\n\r\n/**\r\n * 判断当前wifi的加密类型\r\n */\r\nfunction getSecurityType(result : ScanResult) : string {\r\n\tif (result.capabilities.contains(\"WEP\")) {\r\n\t\treturn \"WEP\";\r\n\t} else if (result.capabilities.contains(\"PSK\")) {\r\n\t\treturn \"WPA\";\r\n\t} else if (result.capabilities.contains(\"EAP\")) {\r\n\t\treturn \"EAP\";\r\n\t}\r\n\treturn \"NONE\";\r\n}\r\n\r\n\r\nfunction zeroCountNum(source ?: string) : number {\r\n\tif (source == null) {\r\n\t\treturn 0\r\n\t}\r\n\tvar splitted = source.split(\":\")\r\n\tvar countNum = 0;\r\n\tfor (perItem in splitted) {\r\n\t\tif (perItem == \"00\") {\r\n\t\t\tcountNum += 1\r\n\t\t}\r\n\t}\r\n\treturn countNum\r\n}\r\n\r\n\r\n/**\r\n\t* 自定义wifi变化广播监听器\r\n\t*/\r\n@Suppress(\"UNUSED_PARAMETER\", \"DEPRECATION\")\r\nclass CustomBroadcastReceiver extends BroadcastReceiver {\r\n\r\n\tmWifiManager : WifiManager | null = null;\r\n\r\n\tconstructor(wifiManager : WifiManager) {\r\n\t\tsuper();\r\n\t\tthis.mWifiManager = wifiManager;\r\n\t}\r\n\r\n\toverride onReceive(_context : Context, intent : Intent) : void {\r\n\r\n\r\n\t\tif (intent.action == WifiManager.WIFI_STATE_CHANGED_ACTION) {\r\n\r\n\t\t\tlet state =\r\n\t\t\t\tintent.getIntExtra(WifiManager.EXTRA_WIFI_STATE, WifiManager.WIFI_STATE_UNKNOWN)\r\n\r\n\t\t\tif (state == WifiManager.WIFI_STATE_ENABLED) {\r\n\t\t\t\t// 获取当前的connectInfo 并且进行数据封装\r\n\t\t\t\tlet uniWifiInfo = new UniWifiInfo(\"\",\"\",false,0,0)\r\n\t\t\t\t//做一些异步操作\r\n\t\t\t\tsetTimeout(function () {\r\n\t\t\t\t\t// BroadcastReceiver 中不能执行耗时任务，需要使用setTimeout\r\n\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t\tlet winfo = this.mWifiManager!.getConnectionInfo();\r\n\r\n          if(winfo != null && winfo.bssid != null && zeroCountNum(winfo.bssid) < 3){\r\n              //  当前设备链接到了某个具体的wifi.封装成数据对象\r\n              uniWifiInfo = wrapUniWifiInfoFromConnectInfo(winfo)\r\n              let res = new UniWifiResult(0,UniErrorSubject,'onWifiConnected:ok',uniWifiInfo)\r\n\r\n              // wifi状态可用了，分发当前的链接状态给已注册的监听集合\r\n              for (let perCallback in Global.onWifiConnectCallbackList) {\r\n                perCallback(res);\r\n              }\r\n              // 封装仅SSID 数据对象\r\n              let connectedWithPartialInfo = new UniWifiInfoWithPartialInfo(uniWifiInfo.SSID)\r\n\r\n              for (let perCallback in Global.onWifiConnectWithPartialInfoCallbackList) {\r\n                perCallback(connectedWithPartialInfo);\r\n              }\r\n          } else {\r\n            // 开启了wifi 开关，但是尚未链接到某个具体的wifi\r\n          }\r\n\r\n\t\t\t\t}, 100);\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\r\n\t\tif (intent.action == WifiManager.SCAN_RESULTS_AVAILABLE_ACTION) {\r\n\t\t\tstartWifiScaning = false;\r\n\t\t\t// wifi 扫描结果回调\r\n\t\t\tlet results = this.mWifiManager!.scanResults;\r\n\r\n\t\t\tif (results != null) {\r\n\t\t\t\tGlobal.scanList = []\r\n\t\t\t\tfor (let scanResult in results) {\r\n\t\t\t\t\tif (scanResult.SSID == null) {\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tGlobal.scanList.push(wrapUniWifiInfoFromScan(scanResult));\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// 挨个通知，所有的监听器\r\n\t\t\t\tif(Global.onGetWifiListCallback != null){\r\n\t\t\t\t\tconst data = new UTSJSONObject();\r\n\t\t\t\t\tdata[\"wifiList\"] = Global.scanList\r\n\t\t\t\t\tGlobal.onGetWifiListCallback?.(data);\r\n\t\t\t\t\t/**\r\n\t\t\t\t\t * 确保onGetWifiList 只会被执行一次\r\n\t\t\t\t\t */\r\n\t\t\t\t\tGlobal.onGetWifiListCallback = null\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n      let ret = new UniWifiResult(0,UniErrorSubject,\"getWifiList:ok\",null)\r\n\t\t\tif(Global.supendGetWifiSuccess != null){\r\n\t\t\t\tGlobal.supendGetWifiSuccess?.(ret)\r\n\t\t\t\tGlobal.supendGetWifiSuccess = null\r\n\t\t\t}\r\n\t\t\tif(Global.supendGetWifiComplete != null){\r\n\t\t\t\tGlobal.supendGetWifiComplete?.(ret)\r\n\t\t\t\tGlobal.supendGetWifiComplete = null\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n}\r\n\r\n\r\n\r\n/************************* 下面是对外提供的函数 *************************/\r\n/**\r\n * start wifi是否正在扫描\r\n */\r\nvar startWifiScaning = false\r\n\r\n/**\r\n * 开启wifi\r\n */\r\n@Suppress(\"DEPRECATION\")\r\nexport function startWifiImpl(option : WifiOption) {\r\n\r\n\r\n  // 具备了权限，继续前进\r\n  let wifiManager : WifiManager =\r\n  \tUTSAndroid.getAppContext()!.getSystemService(Context.WIFI_SERVICE) as WifiManager\r\n  // 用户没有开启wifi 总开关\r\n  if (!wifiManager.isWifiEnabled()) {\r\n  \t// wifi 没开启\r\n    let failResult = new WifiFailImpl(getErrcode(12005));\r\n  \toption.fail?.(failResult);\r\n  \toption.complete?.(failResult);\r\n  \treturn;\r\n  }\r\n  // 初始化wifi 状态广播监听，后续所有的api，均基于此\r\n  if(Global.mReceiver != null){\r\n  \t// 说明已经注册过了\r\n    let result = UniWifiResult(0,UniErrorSubject,\"startWifi:ok\",null)\r\n\r\n  \toption.success?.(result)\r\n  \toption.complete?.(result)\r\n  \treturn\r\n  }\r\n\r\n\r\n  Global.mReceiver = new CustomBroadcastReceiver(wifiManager)\r\n\r\n  let filter = new IntentFilter()\r\n  filter.addAction(WifiManager.SCAN_RESULTS_AVAILABLE_ACTION)\r\n  // @ts-ignore\r\n  filter.addAction(WifiManager.WIFI_STATE_CHANGED_ACTION)\r\n  // @ts-ignore\r\n  filter.addAction(WifiManager.SUPPLICANT_STATE_CHANGED_ACTION);\r\n\r\n  UTSAndroid.getUniActivity()!.registerReceiver(Global.mReceiver, filter)\r\n\r\n  /**\r\n  \t* activity 被销毁时，取消注册\r\n  \t*/\r\n  UTSAndroid.onAppActivityDestroy(function () {\r\n\r\n  \tif (Global.mReceiver != null) {\r\n  \t\tUTSAndroid.getUniActivity()!.unregisterReceiver(Global.mReceiver)\r\n  \t\tGlobal.mReceiver = null\r\n\r\n  \t\tGlobal.scanList = []\r\n  \t\tGlobal.onGetWifiListCallback = null\r\n  \t\tGlobal.onWifiConnectCallbackList = []\r\n  \t\tGlobal.onWifiConnectWithPartialInfoCallbackList = []\r\n  \t}\r\n\r\n  });\r\n  startWifiScaning = true\r\n  // 开始扫描\r\n  wifiManager.startScan()\r\n\r\n  let result = UniWifiResult(0,UniErrorSubject,\"startWifi:ok\",null)\r\n  option.success?.(result)\r\n  option.complete?.(result)\r\n\r\n}\r\n\r\n@Suppress(\"DEPRECATION\")\r\nexport function startWifi(option : WifiOption) {\r\n\r\n  /**\r\n   * 准备权限\r\n   */\r\n  let permissionNeed = [\"android.permission.ACCESS_FINE_LOCATION\"];\r\n  UTSAndroid.requestSystemPermission(UTSAndroid.getUniActivity()!, permissionNeed, function (allRight:boolean,_grantedList:string[]) {\r\n  \tif (allRight) {\r\n  \t\t// 交给目前的location 引擎，真实执行\r\n  \t\tstartWifiImpl(option)\r\n  \t}\r\n  }, function (_doNotAskAgain:boolean,_grantedList:string[]) {\r\n  \tlet err = new WifiFailImpl(getErrcode(12001));\r\n  \toption.fail?.(err)\r\n  \toption.complete?.(err)\r\n  })\r\n\r\n}\r\n\r\n/**\r\n\t* 获取wifi列表\r\n\t*/\r\n@Suppress(\"DEPRECATION\")\r\nexport function getWifiList(option : WifiOption) {\r\n\r\n\r\n\tif (Global.mReceiver == null) {\r\n\t\t// 还没调用startWifi 提示报错\r\n    let err = new WifiFailImpl(getErrcode(12000));\r\n\t\toption.fail?.(err)\r\n\t\toption.complete?.(err)\r\n\r\n\t\treturn\r\n\t}\r\n\r\n\tlet wifiManager : WifiManager =\r\n\t\tUTSAndroid.getAppContext()!.getSystemService(Context.WIFI_SERVICE) as WifiManager\r\n\r\n  if(option.success != null){\r\n    Global.supendGetWifiSuccess = option.success\r\n  }\r\n\tif(option.complete != null){\r\n    Global.supendGetWifiComplete = option.complete\r\n  }\r\n\r\n\twifiManager.startScan()\r\n\r\n}\r\n\r\n\r\n\r\n/**\r\n\t* wifi 链接成功的回调注册\r\n\t*/\r\nexport function onWifiConnected(callback : UniWifiResultCallback) {\r\n\tGlobal.onWifiConnectCallbackList.push(callback)\r\n}\r\n\r\n\r\nexport function onWifiConnectedWithPartialInfo(callback : UniWifiResultCallbackWithPartialInfo) {\r\n\tGlobal.onWifiConnectWithPartialInfoCallbackList.push(callback)\r\n}\r\n\r\n\r\n/**\r\n * wifi 链接成功的回调取消注册\r\n */\r\nexport function offWifiConnected(callback? : UniWifiResultCallback) {\r\n\r\n\tif(callback == null){\r\n\t\tGlobal.onWifiConnectCallbackList = []\r\n\t\treturn\r\n\t}\r\n\r\n\tlet callbackIndex = Global.onWifiConnectCallbackList.indexOf(callback)\r\n\tif (callbackIndex >= 0) {\r\n\t\tGlobal.onWifiConnectCallbackList.splice(callbackIndex, 1);\r\n\t}\r\n}\r\n\r\n/**\r\n * 不具备详细信息的wifi 反注册\r\n */\r\nexport function offWifiConnectedWithPartialInfo(callback? : UniWifiResultCallbackWithPartialInfo) {\r\n\r\n\tif(callback == null){\r\n\t\tGlobal.onWifiConnectWithPartialInfoCallbackList = []\r\n\t\treturn\r\n\t}\r\n\r\n\tlet callbackIndex = Global.onWifiConnectWithPartialInfoCallbackList.indexOf(callback)\r\n\tif (callbackIndex >= 0) {\r\n\t\tGlobal.onWifiConnectWithPartialInfoCallbackList.splice(callbackIndex, 1);\r\n\t}\r\n}\r\n\r\n/**\r\n\t* 注册Wifi列表的监听事件\r\n\t*/\r\nexport function onGetWifiList(callback : UniGetWifiListCallback) {\r\n\tGlobal.onGetWifiListCallback = callback\r\n}\r\n\r\n/**\r\n * 取消注册Wifi列表的监听事件\r\n */\r\nexport function offGetWifiList(callback? : UniWifiCallback) {\r\n\tGlobal.onGetWifiListCallback = null\r\n\tGlobal.supendGetWifiComplete = null\r\n\tGlobal.supendGetWifiSuccess = null\r\n}\r\n\r\n\r\n/**\r\n * 真正执行wifi链接逻辑\r\n */\r\nfunction realWifiConnect(option : WifiConnectOption){\r\n\r\n\tif (Global.mReceiver == null || Global.scanList.length < 1) {\r\n\r\n    let err = new WifiFailImpl(getErrcode(12000));\r\n\t\toption.fail?.(err)\r\n\t\toption.complete?.(err)\r\n\r\n\t\treturn\r\n\t}\r\n\r\n\t// 执行后续的逻辑\r\n\tlet scanWifiInfo : AndroidUniWifiInfo | null = null\r\n\tfor (let scanResult in Global.scanList) {\r\n\t\tif (scanResult.SSID.equals(option.SSID)) {\r\n\t\t\tscanWifiInfo = scanResult\r\n\t\t}\r\n\t}\r\n\r\n\tif (scanWifiInfo == null) {\r\n\t\t// 不在扫描列表中返回错误\r\n    let err = new WifiFailImpl(getErrcode(12000));\r\n\t\toption.fail?.(err)\r\n\t\toption.complete?.(err)\r\n\t\treturn\r\n\t}\r\n\r\n\tlet wifiConfigration = wrapWifiConfiguration(scanWifiInfo.SSID, option.password, scanWifiInfo.securityType);\r\n\twifiConfigration.BSSID = scanWifiInfo.BSSID\r\n\tlet wifiManager : WifiManager =\r\n\t\tUTSAndroid.getAppContext()!.getSystemService(Context.WIFI_SERVICE) as WifiManager\r\n\r\n\t// 如果已经存在了指定wifi 配置，移除之\r\n\tlet targetExistConfig : WifiConfiguration | null = null\r\n\tlet existingConfigs = wifiManager.getConfiguredNetworks();\r\n\tfor (let existingConfig in existingConfigs) {\r\n\t\tif (existingConfig.SSID.equals(\"\\\"\" + option.SSID + \"\\\"\")) {\r\n\t\t\ttargetExistConfig = existingConfig\r\n\t\t}\r\n\t}\r\n\t// 如果wifi已经保存了当前ssid的配置，可能是别的应用添加的。android系统要求，需要删除掉重新添加\r\n\tif (targetExistConfig != null) {\r\n\t\tlet removeRet = wifiManager.removeNetwork(targetExistConfig.networkId);\r\n\r\n\t\tif (!removeRet) {\r\n\r\n\t\t\t// add since 2023-03-28，如果当前系统大于等于android10， 则明确当前系统不支持\r\n\t\t\tif(Build.VERSION.SDK_INT > 28){\r\n\t\t\t\t// 系统大于android 9\r\n        let err = new WifiFailImpl(getErrcode(12001));\r\n\t\t\t\toption.fail?.(err)\r\n\t\t\t\toption.complete?.(err)\r\n\t\t\t}else{\r\n\t\t\t\t// 移除之前的配置失败了，返回错误，需要用户手动取消保存一下\r\n        let err = new WifiFailImpl(getErrcode(12013));\r\n\t\t\t\toption.fail?.(err)\r\n\t\t\t\toption.complete?.(err)\r\n\t\t\t}\r\n\r\n\r\n\t\t\treturn\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tlet currentConnect = wifiManager.getConnectionInfo()\r\n\tif (currentConnect.networkId >= 0) {\r\n\t\twifiManager.disableNetwork(currentConnect.networkId)\r\n\t} else {\r\n\t\twifiManager.removeNetwork(currentConnect.networkId)\r\n\t}\r\n\twifiManager.disconnect()\r\n\r\n\tlet connected = false;\r\n\ttry {\r\n\r\n\t\tlet netID = wifiManager.addNetwork(wifiConfigration);\r\n\t\t// 如果-1 说明没添加上，报错即可\r\n\t\tif (netID < 0) {\r\n      let err = new WifiFailImpl(getErrcode(12002));\r\n\t\t\toption.fail?.(err)\r\n\t\t\toption.complete?.(err)\r\n\r\n\t\t\treturn\r\n\t\t}\r\n\r\n\r\n\t\tlet enabled = wifiManager.enableNetwork(netID, true);\r\n\t\tif (!enabled) {\r\n      let err = new WifiFailImpl(getErrcode(12007));\r\n\t\t\toption.fail?.(err)\r\n\t\t\toption.complete?.(err)\r\n\r\n\t\t\treturn\r\n\t\t}\r\n\t\tconnected = wifiManager.reconnect();\r\n\r\n\t} catch (e) {\r\n\t\tconnected = false;\r\n\t\tconsole.log(e);\r\n\t}\r\n\r\n\tif (!connected) {\r\n\t\t// 出错了，返回错误\r\n\t\t// 兜底的报错\r\n    let err = new WifiFailImpl(getErrcode(12010));\r\n\t\toption.fail?.(err)\r\n\t\toption.complete?.(err)\r\n\t\treturn\r\n\t}\r\n\r\n  let result = new UniWifiResult(0,UniErrorSubject,\"getWifiList:ok\",null)\r\n\r\n\twifiManager.saveConfiguration()\r\n\t//scanWifiInfo 根据 partialInfo 填充给返回字段\r\n\tif (option.partialInfo != null && option.partialInfo == true) {\r\n\t\tlet wifiPartialInfo : UniWifiInfo = {\r\n\t\t\tSSID: scanWifiInfo.SSID\r\n\t\t}\r\n\t\tresult.wifi = wifiPartialInfo\r\n\t} else {\r\n\t\tresult.wifi = wrapUniWifiInfoFromAndroid(scanWifiInfo)\r\n\t}\r\n\r\n\r\n\toption.success?.(result)\r\n\toption.complete?.(result)\r\n}\r\n\r\n/**\r\n * 链接指定wifi\r\n */\r\n@Suppress(\"UNUSED_PARAMETER\", \"DEPRECATION\")\r\nexport function connectWifi(option : WifiConnectOption) {\r\n\r\n\tif (option.maunal == true) {\r\n\t\t// 指定了手动模式\r\n\t\tlet manunalIntent = new Intent(android.provider.Settings.ACTION_WIFI_SETTINGS);\r\n\t\tUTSAndroid.getUniActivity()!.startActivity(manunalIntent);\r\n\r\n    \r\n     let result = new UniWifiResult(0,UniErrorSubject,\"connectWifi:ok\",null)\r\n\r\n\t\toption.success?.(result)\r\n\t\toption.complete?.(result)\r\n\t\treturn\r\n\t}\r\n\r\n\r\n\r\n\t// add since 2022-03-28 ，增加逻辑，如果正在扫描中，则可以等待5s\r\n\tif(startWifiScaning){\r\n\t\tlet taskCount = 0\r\n\t\tlet taskId:number  = 0\r\n\t\ttaskId = setInterval(function(){\r\n\r\n\t\t\ttaskCount += 1;\r\n\t\t\tif(taskCount >= 5 || startWifiScaning == false){\r\n\t\t\t\t// 超过10s了。或者扫描过程结束了\r\n\t\t\t\tclearInterval(taskId)\r\n\t\t\t\trealWifiConnect(option)\r\n\t\t\t}\r\n\t\t},2000)\r\n\r\n\t\tUTSAndroid.onAppActivityDestroy(function () {\r\n\t\t\tclearInterval(taskId)\r\n\t\t});\r\n\t}else{\r\n\t\trealWifiConnect(option)\r\n\t}\r\n\r\n\r\n\r\n}\r\n\r\n\r\n/**\r\n\t* 关闭wifi\r\n\t*/\r\nexport function stopWifi(option : WifiOption) {\r\n\t// 需要先开启wifi,才能使用后续的功能\r\n\tif (Global.mReceiver == null) {\r\n    let err = new WifiFailImpl(getErrcode(12000));\r\n\t\toption.fail?.(err)\r\n\t\toption.complete?.(err)\r\n\r\n\t\treturn\r\n\t}\r\n\ttry {\r\n\t\tUTSAndroid.getUniActivity()!.unregisterReceiver(Global.mReceiver)\r\n\t} catch (e) {\r\n\t\t// 多次调用\r\n\t\t//TODO handle the exception\r\n\t}\r\n\r\n\tGlobal.onGetWifiListCallback = null\r\n\tGlobal.onWifiConnectWithPartialInfoCallbackList = []\r\n\tGlobal.onWifiConnectCallbackList = []\r\n\tGlobal.mReceiver = null\r\n\r\n  let ret = new UniWifiResult(0,UniErrorSubject,\"stopWifi:ok\",null)\r\n\toption.success?.(ret)\r\n\toption.complete?.(ret)\r\n\r\n}\r\n\r\n/**\r\n * 获取当前连接中的wifi信息\r\n */\r\n@Suppress(\"DEPRECATION\")\r\nexport function getConnectedWifi(option : GetConnectedWifiOptions) {\r\n\r\n\tlet wifiInfo : UniWifiInfo = {\r\n\t\tSSID: \"\"\r\n\t}\r\n\r\n\r\n\tif (Global.mReceiver == null) {\r\n\t\t// 还没调用startWifi 提示报错\r\n    let err = new WifiFailImpl(getErrcode(12000));\r\n\t\toption.fail?.(err)\r\n\t\toption.complete?.(err)\r\n\r\n\t\treturn\r\n\t}\r\n\r\n\t// 需要先校验权限，没有位置权限无法获取wifi\r\n\tif (ActivityCompat.checkSelfPermission(UTSAndroid.getUniActivity()!, Manifest.permission.ACCESS_FINE_LOCATION) != PackageManager.PERMISSION_GRANTED) {\r\n\t\t// 尚不具备权限，返回错误\r\n    let err = new WifiFailImpl(getErrcode(12001));\r\n\t\toption.fail?.(err)\r\n\t\toption.complete?.(err)\r\n\t\treturn;\r\n\t}\r\n\r\n\r\n\r\n\tconst context = UTSAndroid.getAppContext();\r\n\tif (context != null) {\r\n\t\tconst wm = context.getSystemService(\r\n\t\t\tContext.WIFI_SERVICE\r\n\t\t) as WifiManager;\r\n\t\t// 测试android 12上可以使用\r\n\t\t//@ts-ignore\r\n\t\tconst winfo = wm.getConnectionInfo();\r\n\r\n\t\twifiInfo = wrapUniWifiInfoFromConnectInfo(winfo);\r\n\r\n    let res = new UniWifiResult(0,UniErrorSubject,\"getConnectedWifi:ok\",null)\r\n\r\n\t\t// 判断一下是否wifi 关闭了\r\n\t\tif (option.partialInfo!= null) {\r\n\t\t\tlet ret : UniWifiInfo = {\r\n\t\t\t\tSSID: wifiInfo.SSID\r\n\t\t\t}\r\n\t\t\tres.wifi = ret;\r\n\t\t} else {\r\n\t\t\tif (wifiInfo.BSSID == null || zeroCountNum(wifiInfo.BSSID) > 3) {\r\n         let err = new WifiFailImpl(getErrcode(12005));\r\n\t\t\t\toption.fail?.(err)\r\n\t\t\t\toption.complete?.(err)\r\n\t\t\t\treturn\r\n\t\t\t}\r\n\t\t\tres.wifi = wifiInfo;\r\n\t\t}\r\n\r\n\r\n\t\toption.success?.(res)\r\n\t\toption.complete?.(res)\r\n\t\treturn\r\n\t}\r\n\r\n  let err = new WifiFailImpl(getErrcode(12000));\r\n\toption.fail?.(err)\r\n\toption.complete?.(err)\r\n}\r\n\r\n"]}